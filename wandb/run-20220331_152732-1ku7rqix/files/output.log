something: 174 classes
[32m[03/31 15:27:43 TDN]: [39mstoring name: TDN__something_RGB_tea50_avg_segment8_e50
Initializing TSN with base model: tea50.
                      TSN Configurations:
                      input_modality:     RGB
                      num_segments:       8
                      new_length:         1
                      consensus_module:   avg
                      dropout_ratio:      0.5
                      img_feature_dim:    256
=> base model: tea50
TSN(
  (base_model): Res2Net(
    (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (layer1): Sequential(
      (0): Bottle2neckShift(
        (me): MEModule(
          (conv1): Conv2d(104, 6, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(6, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(6, 6, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=6, bias=False)
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (sigmoid): Sigmoid()
          (conv3): Conv2d(6, 104, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(104, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (identity): Identity()
        )
        (conv1): Conv2d(64, 104, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(104, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
        (convs): ModuleList(
          (0): Conv2d(26, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (1): Conv2d(26, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (2): Conv2d(26, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (bns): ModuleList(
          (0): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (shifts): ModuleList(
          (0): ShiftModule(
            (conv): Conv1d(26, 26, kernel_size=(3,), stride=(1,), padding=(1,), groups=26, bias=False)
          )
          (1): ShiftModule(
            (conv): Conv1d(26, 26, kernel_size=(3,), stride=(1,), padding=(1,), groups=26, bias=False)
          )
          (2): ShiftModule(
            (conv): Conv1d(26, 26, kernel_size=(3,), stride=(1,), padding=(1,), groups=26, bias=False)
          )
          (3): ShiftModule(
            (conv): Conv1d(26, 26, kernel_size=(3,), stride=(1,), padding=(1,), groups=26, bias=False)
          )
        )
        (conv3): Conv2d(104, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottle2neckShift(
        (me): MEModule(
          (conv1): Conv2d(104, 6, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(6, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(6, 6, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=6, bias=False)
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (sigmoid): Sigmoid()
          (conv3): Conv2d(6, 104, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(104, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (identity): Identity()
        )
        (conv1): Conv2d(256, 104, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(104, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (convs): ModuleList(
          (0): Conv2d(26, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (1): Conv2d(26, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (2): Conv2d(26, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (bns): ModuleList(
          (0): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (shifts): ModuleList(
          (0): ShiftModule(
            (conv): Conv1d(26, 26, kernel_size=(3,), stride=(1,), padding=(1,), groups=26, bias=False)
          )
          (1): ShiftModule(
            (conv): Conv1d(26, 26, kernel_size=(3,), stride=(1,), padding=(1,), groups=26, bias=False)
          )
          (2): ShiftModule(
            (conv): Conv1d(26, 26, kernel_size=(3,), stride=(1,), padding=(1,), groups=26, bias=False)
          )
          (3): ShiftModule(
            (conv): Conv1d(26, 26, kernel_size=(3,), stride=(1,), padding=(1,), groups=26, bias=False)
          )
        )
        (conv3): Conv2d(104, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottle2neckShift(
        (me): MEModule(
          (conv1): Conv2d(104, 6, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(6, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(6, 6, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=6, bias=False)
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (sigmoid): Sigmoid()
          (conv3): Conv2d(6, 104, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(104, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (identity): Identity()
        )
        (conv1): Conv2d(256, 104, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(104, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (convs): ModuleList(
          (0): Conv2d(26, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (1): Conv2d(26, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (2): Conv2d(26, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (bns): ModuleList(
          (0): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (shifts): ModuleList(
          (0): ShiftModule(
            (conv): Conv1d(26, 26, kernel_size=(3,), stride=(1,), padding=(1,), groups=26, bias=False)
          )
          (1): ShiftModule(
            (conv): Conv1d(26, 26, kernel_size=(3,), stride=(1,), padding=(1,), groups=26, bias=False)
          )
          (2): ShiftModule(
            (conv): Conv1d(26, 26, kernel_size=(3,), stride=(1,), padding=(1,), groups=26, bias=False)
          )
          (3): ShiftModule(
            (conv): Conv1d(26, 26, kernel_size=(3,), stride=(1,), padding=(1,), groups=26, bias=False)
          )
        )
        (conv3): Conv2d(104, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (layer2): Sequential(
      (0): Bottle2neckShift(
        (me): MEModule(
          (conv1): Conv2d(208, 13, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(13, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=13, bias=False)
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (sigmoid): Sigmoid()
          (conv3): Conv2d(13, 208, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (identity): Identity()
        )
        (conv1): Conv2d(256, 208, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (pool): AvgPool2d(kernel_size=3, stride=2, padding=1)
        (convs): ModuleList(
          (0): Conv2d(52, 52, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (1): Conv2d(52, 52, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (2): Conv2d(52, 52, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        )
        (bns): ModuleList(
          (0): BatchNorm2d(52, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): BatchNorm2d(52, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): BatchNorm2d(52, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (shifts): ModuleList(
          (0): ShiftModule(
            (conv): Conv1d(52, 52, kernel_size=(3,), stride=(1,), padding=(1,), groups=52, bias=False)
          )
          (1): ShiftModule(
            (conv): Conv1d(52, 52, kernel_size=(3,), stride=(1,), padding=(1,), groups=52, bias=False)
          )
          (2): ShiftModule(
            (conv): Conv1d(52, 52, kernel_size=(3,), stride=(1,), padding=(1,), groups=52, bias=False)
          )
          (3): ShiftModule(
            (conv): Conv1d(52, 52, kernel_size=(3,), stride=(1,), padding=(1,), groups=52, bias=False)
          )
        )
        (conv3): Conv2d(208, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottle2neckShift(
        (me): MEModule(
          (conv1): Conv2d(208, 13, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(13, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=13, bias=False)
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (sigmoid): Sigmoid()
          (conv3): Conv2d(13, 208, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (identity): Identity()
        )
        (conv1): Conv2d(512, 208, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (convs): ModuleList(
          (0): Conv2d(52, 52, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (1): Conv2d(52, 52, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (2): Conv2d(52, 52, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (bns): ModuleList(
          (0): BatchNorm2d(52, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): BatchNorm2d(52, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): BatchNorm2d(52, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (shifts): ModuleList(
          (0): ShiftModule(
            (conv): Conv1d(52, 52, kernel_size=(3,), stride=(1,), padding=(1,), groups=52, bias=False)
          )
          (1): ShiftModule(
            (conv): Conv1d(52, 52, kernel_size=(3,), stride=(1,), padding=(1,), groups=52, bias=False)
          )
          (2): ShiftModule(
            (conv): Conv1d(52, 52, kernel_size=(3,), stride=(1,), padding=(1,), groups=52, bias=False)
          )
          (3): ShiftModule(
            (conv): Conv1d(52, 52, kernel_size=(3,), stride=(1,), padding=(1,), groups=52, bias=False)
          )
        )
        (conv3): Conv2d(208, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottle2neckShift(
        (me): MEModule(
          (conv1): Conv2d(208, 13, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(13, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=13, bias=False)
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (sigmoid): Sigmoid()
          (conv3): Conv2d(13, 208, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (identity): Identity()
        )
        (conv1): Conv2d(512, 208, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (convs): ModuleList(
          (0): Conv2d(52, 52, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (1): Conv2d(52, 52, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (2): Conv2d(52, 52, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (bns): ModuleList(
          (0): BatchNorm2d(52, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): BatchNorm2d(52, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): BatchNorm2d(52, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (shifts): ModuleList(
          (0): ShiftModule(
            (conv): Conv1d(52, 52, kernel_size=(3,), stride=(1,), padding=(1,), groups=52, bias=False)
          )
          (1): ShiftModule(
            (conv): Conv1d(52, 52, kernel_size=(3,), stride=(1,), padding=(1,), groups=52, bias=False)
          )
          (2): ShiftModule(
            (conv): Conv1d(52, 52, kernel_size=(3,), stride=(1,), padding=(1,), groups=52, bias=False)
          )
          (3): ShiftModule(
            (conv): Conv1d(52, 52, kernel_size=(3,), stride=(1,), padding=(1,), groups=52, bias=False)
          )
        )
        (conv3): Conv2d(208, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (3): Bottle2neckShift(
        (me): MEModule(
          (conv1): Conv2d(208, 13, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(13, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=13, bias=False)
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (sigmoid): Sigmoid()
          (conv3): Conv2d(13, 208, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (identity): Identity()
        )
        (conv1): Conv2d(512, 208, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (convs): ModuleList(
          (0): Conv2d(52, 52, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (1): Conv2d(52, 52, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (2): Conv2d(52, 52, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (bns): ModuleList(
          (0): BatchNorm2d(52, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): BatchNorm2d(52, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): BatchNorm2d(52, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (shifts): ModuleList(
          (0): ShiftModule(
            (conv): Conv1d(52, 52, kernel_size=(3,), stride=(1,), padding=(1,), groups=52, bias=False)
          )
          (1): ShiftModule(
            (conv): Conv1d(52, 52, kernel_size=(3,), stride=(1,), padding=(1,), groups=52, bias=False)
          )
          (2): ShiftModule(
            (conv): Conv1d(52, 52, kernel_size=(3,), stride=(1,), padding=(1,), groups=52, bias=False)
          )
          (3): ShiftModule(
            (conv): Conv1d(52, 52, kernel_size=(3,), stride=(1,), padding=(1,), groups=52, bias=False)
          )
        )
        (conv3): Conv2d(208, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (layer3): Sequential(
      (0): Bottle2neckShift(
        (me): MEModule(
          (conv1): Conv2d(416, 26, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(26, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=26, bias=False)
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (sigmoid): Sigmoid()
          (conv3): Conv2d(26, 416, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (identity): Identity()
        )
        (conv1): Conv2d(512, 416, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (pool): AvgPool2d(kernel_size=3, stride=2, padding=1)
        (convs): ModuleList(
          (0): Conv2d(104, 104, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (1): Conv2d(104, 104, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (2): Conv2d(104, 104, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        )
        (bns): ModuleList(
          (0): BatchNorm2d(104, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): BatchNorm2d(104, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): BatchNorm2d(104, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (shifts): ModuleList(
          (0): ShiftModule(
            (conv): Conv1d(104, 104, kernel_size=(3,), stride=(1,), padding=(1,), groups=104, bias=False)
          )
          (1): ShiftModule(
            (conv): Conv1d(104, 104, kernel_size=(3,), stride=(1,), padding=(1,), groups=104, bias=False)
          )
          (2): ShiftModule(
            (conv): Conv1d(104, 104, kernel_size=(3,), stride=(1,), padding=(1,), groups=104, bias=False)
          )
          (3): ShiftModule(
            (conv): Conv1d(104, 104, kernel_size=(3,), stride=(1,), padding=(1,), groups=104, bias=False)
          )
        )
        (conv3): Conv2d(416, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottle2neckShift(
        (me): MEModule(
          (conv1): Conv2d(416, 26, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(26, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=26, bias=False)
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (sigmoid): Sigmoid()
          (conv3): Conv2d(26, 416, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (identity): Identity()
        )
        (conv1): Conv2d(1024, 416, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (convs): ModuleList(
          (0): Conv2d(104, 104, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (1): Conv2d(104, 104, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (2): Conv2d(104, 104, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (bns): ModuleList(
          (0): BatchNorm2d(104, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): BatchNorm2d(104, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): BatchNorm2d(104, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (shifts): ModuleList(
          (0): ShiftModule(
            (conv): Conv1d(104, 104, kernel_size=(3,), stride=(1,), padding=(1,), groups=104, bias=False)
          )
          (1): ShiftModule(
            (conv): Conv1d(104, 104, kernel_size=(3,), stride=(1,), padding=(1,), groups=104, bias=False)
          )
          (2): ShiftModule(
            (conv): Conv1d(104, 104, kernel_size=(3,), stride=(1,), padding=(1,), groups=104, bias=False)
          )
          (3): ShiftModule(
            (conv): Conv1d(104, 104, kernel_size=(3,), stride=(1,), padding=(1,), groups=104, bias=False)
          )
        )
        (conv3): Conv2d(416, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottle2neckShift(
        (me): MEModule(
          (conv1): Conv2d(416, 26, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(26, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=26, bias=False)
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (sigmoid): Sigmoid()
          (conv3): Conv2d(26, 416, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (identity): Identity()
        )
        (conv1): Conv2d(1024, 416, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (convs): ModuleList(
          (0): Conv2d(104, 104, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (1): Conv2d(104, 104, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (2): Conv2d(104, 104, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (bns): ModuleList(
          (0): BatchNorm2d(104, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): BatchNorm2d(104, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): BatchNorm2d(104, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (shifts): ModuleList(
          (0): ShiftModule(
            (conv): Conv1d(104, 104, kernel_size=(3,), stride=(1,), padding=(1,), groups=104, bias=False)
          )
          (1): ShiftModule(
            (conv): Conv1d(104, 104, kernel_size=(3,), stride=(1,), padding=(1,), groups=104, bias=False)
          )
          (2): ShiftModule(
            (conv): Conv1d(104, 104, kernel_size=(3,), stride=(1,), padding=(1,), groups=104, bias=False)
          )
          (3): ShiftModule(
            (conv): Conv1d(104, 104, kernel_size=(3,), stride=(1,), padding=(1,), groups=104, bias=False)
          )
        )
        (conv3): Conv2d(416, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (3): Bottle2neckShift(
        (me): MEModule(
          (conv1): Conv2d(416, 26, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(26, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=26, bias=False)
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (sigmoid): Sigmoid()
          (conv3): Conv2d(26, 416, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (identity): Identity()
        )
        (conv1): Conv2d(1024, 416, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (convs): ModuleList(
          (0): Conv2d(104, 104, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (1): Conv2d(104, 104, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (2): Conv2d(104, 104, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (bns): ModuleList(
          (0): BatchNorm2d(104, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): BatchNorm2d(104, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): BatchNorm2d(104, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (shifts): ModuleList(
          (0): ShiftModule(
            (conv): Conv1d(104, 104, kernel_size=(3,), stride=(1,), padding=(1,), groups=104, bias=False)
          )
          (1): ShiftModule(
            (conv): Conv1d(104, 104, kernel_size=(3,), stride=(1,), padding=(1,), groups=104, bias=False)
          )
          (2): ShiftModule(
            (conv): Conv1d(104, 104, kernel_size=(3,), stride=(1,), padding=(1,), groups=104, bias=False)
          )
          (3): ShiftModule(
            (conv): Conv1d(104, 104, kernel_size=(3,), stride=(1,), padding=(1,), groups=104, bias=False)
          )
        )
        (conv3): Conv2d(416, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (4): Bottle2neckShift(
        (me): MEModule(
          (conv1): Conv2d(416, 26, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(26, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=26, bias=False)
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (sigmoid): Sigmoid()
          (conv3): Conv2d(26, 416, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (identity): Identity()
        )
        (conv1): Conv2d(1024, 416, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (convs): ModuleList(
          (0): Conv2d(104, 104, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (1): Conv2d(104, 104, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (2): Conv2d(104, 104, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (bns): ModuleList(
          (0): BatchNorm2d(104, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): BatchNorm2d(104, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): BatchNorm2d(104, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (shifts): ModuleList(
          (0): ShiftModule(
            (conv): Conv1d(104, 104, kernel_size=(3,), stride=(1,), padding=(1,), groups=104, bias=False)
          )
          (1): ShiftModule(
            (conv): Conv1d(104, 104, kernel_size=(3,), stride=(1,), padding=(1,), groups=104, bias=False)
          )
          (2): ShiftModule(
            (conv): Conv1d(104, 104, kernel_size=(3,), stride=(1,), padding=(1,), groups=104, bias=False)
          )
          (3): ShiftModule(
            (conv): Conv1d(104, 104, kernel_size=(3,), stride=(1,), padding=(1,), groups=104, bias=False)
          )
        )
        (conv3): Conv2d(416, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (5): Bottle2neckShift(
        (me): MEModule(
          (conv1): Conv2d(416, 26, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(26, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=26, bias=False)
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (sigmoid): Sigmoid()
          (conv3): Conv2d(26, 416, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (identity): Identity()
        )
        (conv1): Conv2d(1024, 416, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (convs): ModuleList(
          (0): Conv2d(104, 104, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (1): Conv2d(104, 104, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (2): Conv2d(104, 104, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (bns): ModuleList(
          (0): BatchNorm2d(104, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): BatchNorm2d(104, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): BatchNorm2d(104, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (shifts): ModuleList(
          (0): ShiftModule(
            (conv): Conv1d(104, 104, kernel_size=(3,), stride=(1,), padding=(1,), groups=104, bias=False)
          )
          (1): ShiftModule(
            (conv): Conv1d(104, 104, kernel_size=(3,), stride=(1,), padding=(1,), groups=104, bias=False)
          )
          (2): ShiftModule(
            (conv): Conv1d(104, 104, kernel_size=(3,), stride=(1,), padding=(1,), groups=104, bias=False)
          )
          (3): ShiftModule(
            (conv): Conv1d(104, 104, kernel_size=(3,), stride=(1,), padding=(1,), groups=104, bias=False)
          )
        )
        (conv3): Conv2d(416, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (layer4): Sequential(
      (0): Bottle2neckShift(
        (me): MEModule(
          (conv1): Conv2d(832, 52, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(52, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(52, 52, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=52, bias=False)
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (sigmoid): Sigmoid()
          (conv3): Conv2d(52, 832, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (identity): Identity()
        )
        (conv1): Conv2d(1024, 832, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (pool): AvgPool2d(kernel_size=3, stride=2, padding=1)
        (convs): ModuleList(
          (0): Conv2d(208, 208, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (1): Conv2d(208, 208, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (2): Conv2d(208, 208, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        )
        (bns): ModuleList(
          (0): BatchNorm2d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): BatchNorm2d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): BatchNorm2d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (shifts): ModuleList(
          (0): ShiftModule(
            (conv): Conv1d(208, 208, kernel_size=(3,), stride=(1,), padding=(1,), groups=208, bias=False)
          )
          (1): ShiftModule(
            (conv): Conv1d(208, 208, kernel_size=(3,), stride=(1,), padding=(1,), groups=208, bias=False)
          )
          (2): ShiftModule(
            (conv): Conv1d(208, 208, kernel_size=(3,), stride=(1,), padding=(1,), groups=208, bias=False)
          )
          (3): ShiftModule(
            (conv): Conv1d(208, 208, kernel_size=(3,), stride=(1,), padding=(1,), groups=208, bias=False)
          )
        )
        (conv3): Conv2d(832, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottle2neckShift(
        (me): MEModule(
          (conv1): Conv2d(832, 52, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(52, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(52, 52, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=52, bias=False)
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (sigmoid): Sigmoid()
          (conv3): Conv2d(52, 832, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (identity): Identity()
        )
        (conv1): Conv2d(2048, 832, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (convs): ModuleList(
          (0): Conv2d(208, 208, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (1): Conv2d(208, 208, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (2): Conv2d(208, 208, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (bns): ModuleList(
          (0): BatchNorm2d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): BatchNorm2d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): BatchNorm2d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (shifts): ModuleList(
          (0): ShiftModule(
            (conv): Conv1d(208, 208, kernel_size=(3,), stride=(1,), padding=(1,), groups=208, bias=False)
          )
          (1): ShiftModule(
            (conv): Conv1d(208, 208, kernel_size=(3,), stride=(1,), padding=(1,), groups=208, bias=False)
          )
          (2): ShiftModule(
            (conv): Conv1d(208, 208, kernel_size=(3,), stride=(1,), padding=(1,), groups=208, bias=False)
          )
          (3): ShiftModule(
            (conv): Conv1d(208, 208, kernel_size=(3,), stride=(1,), padding=(1,), groups=208, bias=False)
          )
        )
        (conv3): Conv2d(832, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottle2neckShift(
        (me): MEModule(
          (conv1): Conv2d(832, 52, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(52, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(52, 52, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=52, bias=False)
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (sigmoid): Sigmoid()
          (conv3): Conv2d(52, 832, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (identity): Identity()
        )
        (conv1): Conv2d(2048, 832, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (convs): ModuleList(
          (0): Conv2d(208, 208, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (1): Conv2d(208, 208, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (2): Conv2d(208, 208, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (bns): ModuleList(
          (0): BatchNorm2d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): BatchNorm2d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): BatchNorm2d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (shifts): ModuleList(
          (0): ShiftModule(
            (conv): Conv1d(208, 208, kernel_size=(3,), stride=(1,), padding=(1,), groups=208, bias=False)
          )
          (1): ShiftModule(
            (conv): Conv1d(208, 208, kernel_size=(3,), stride=(1,), padding=(1,), groups=208, bias=False)
          )
          (2): ShiftModule(
            (conv): Conv1d(208, 208, kernel_size=(3,), stride=(1,), padding=(1,), groups=208, bias=False)
          )
          (3): ShiftModule(
            (conv): Conv1d(208, 208, kernel_size=(3,), stride=(1,), padding=(1,), groups=208, bias=False)
          )
        )
        (conv3): Conv2d(832, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (avgpool): AdaptiveAvgPool2d(output_size=1)
    (fc): Dropout(p=0.5, inplace=False)
  )
  (new_fc): Linear(in_features=2048, out_features=174, bias=True)
  (consensus): ConsensusModule()
)
[32m[03/31 15:27:47 TDN]: [39m[TDN-tea50]group: first_conv_weight has 1 params, lr_mult: 1, decay_mult: 1
[32m[03/31 15:27:47 TDN]: [39m[TDN-tea50]group: first_conv_bias has 0 params, lr_mult: 2, decay_mult: 0
[32m[03/31 15:27:47 TDN]: [39m[TDN-tea50]group: normal_weight has 196 params, lr_mult: 1, decay_mult: 1
[32m[03/31 15:27:47 TDN]: [39m[TDN-tea50]group: normal_bias has 0 params, lr_mult: 2, decay_mult: 0
[32m[03/31 15:27:47 TDN]: [39m[TDN-tea50]group: BN scale/shift has 234 params, lr_mult: 1, decay_mult: 0
[32m[03/31 15:27:47 TDN]: [39m[TDN-tea50]group: IN scale/shift has 0 params, lr_mult: 1, decay_mult: 0
[32m[03/31 15:27:47 TDN]: [39m[TDN-tea50]group: custom_ops has 0 params, lr_mult: 1, decay_mult: 1
[32m[03/31 15:27:47 TDN]: [39m[TDN-tea50]group: lr5_weight has 1 params, lr_mult: 5, decay_mult: 1
[32m[03/31 15:27:47 TDN]: [39m[TDN-tea50]group: lr10_bias has 1 params, lr_mult: 10, decay_mult: 0
#################### NO FLIP!!!
video number:86017
video number:11522
/home/zhang/anaconda3/envs/pytorch/lib/python3.9/site-packages/torch/utils/data/dataloader.py:478: UserWarning: This DataLoader will create 16 worker processes in total. Our suggested max number of worker in current system is 8, which is smaller than what this DataLoader is going to create. Please be aware that excessive worker creation might get DataLoader running slow or even freeze, lower the worker number to avoid potential slowness/freeze if necessary.
  warnings.warn(_create_warning_msg(
/home/zhang/anaconda3/envs/pytorch/lib/python3.9/site-packages/torchvision/transforms/transforms.py:280: UserWarning: Argument interpolation should be of type InterpolationMode instead of int. Please, use InterpolationMode enum.
  warnings.warn(
torch.Size([4, 72, 112, 112])
/home/zhang/anaconda3/envs/pytorch/lib/python3.9/site-packages/torch/nn/functional.py:718: UserWarning: Named tensors and all their associated APIs are an experimental feature and subject to change. Please do not use them for anything important until they are released as stable. (Triggered internally at  /pytorch/c10/core/TensorImpl.h:1156.)
  return torch.max_pool2d(input, kernel_size, stride, padding, dilation, ceil_mode)
[W reducer.cpp:1158] Warning: find_unused_parameters=True was specified in DDP constructor, but did not find any unused parameters in the forward pass. This flag results in an extra traversal of the autograd graph every iteration,  which can adversely affect performance. If your model indeed never has any unused parameters in the forward pass, consider turning this flag off. Note that this warning may be a false positive if your model has flow control causing later iterations to have unused parameters. (function operator())
Traceback (most recent call last):
  File "/media/zhang/DATA/AFM/TEA/main.py", line 385, in <module>
    main()
  File "/media/zhang/DATA/AFM/TEA/main.py", line 229, in main
    train_loss, train_top1, train_top5 = train(train_loader, model, criterion, optimizer, epoch=epoch, logger=logger, scheduler=scheduler)
  File "/media/zhang/DATA/AFM/TEA/main.py", line 285, in train
    loss = criterion(output, target_var)
  File "/home/zhang/anaconda3/envs/pytorch/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1051, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/zhang/anaconda3/envs/pytorch/lib/python3.9/site-packages/torch/nn/modules/loss.py", line 1120, in forward
    return F.cross_entropy(input, target, weight=self.weight,
  File "/home/zhang/anaconda3/envs/pytorch/lib/python3.9/site-packages/torch/nn/functional.py", line 2824, in cross_entropy
    return torch._C._nn.cross_entropy_loss(input, target, weight, _Reduction.get_enum(reduction), ignore_index)
ValueError: Expected input batch_size (12) to match target batch_size (4).